[22,27,16,2,18,6] -> Insertion Sort

Yukarı verilen dizinin sort türüne göre aşamalarını yazınız.

Big-O gösterimini yazınız.

Time Complexity: Dizi sıralandıktan sonra 18 sayısı aşağıdaki case'lerden hangisinin kapsamına girer? Yazınız

Average case: Aradığımız sayının ortada olması
Worst case: Aradığımız sayının sonda olması
Best case: Aradığımız sayının dizinin en başında olması.
.



[7,3,5,8,2,9,4,15,6] dizisinin Selection Sort'a göre ilk 4 adımını yazınız.,





### Insertion Sort Aşamaları:

Insertion sort algoritmasında, her adımda dizinin sıralanmamış kısmından bir eleman seçilir ve sıralanmış kısmına yerleştirilir.

Başlangıç: [22, 27, 16, 2, 18, 6]

1. Adım: İlk iki eleman sıralanmış kabul edilir. [22, 27, 16, 2, 18, 6]

2. Adım: 16 sayısı alınır ve 22 ve 27 ile karşılaştırılır. Yerine yerleştirilir. [16, 22, 27, 2, 18, 6]

3. Adım: 2 sayısı alınır ve sıralı kısma yerleştirilir. [2, 16, 22, 27, 18, 6]

4. Adım: 18 sayısı alınır ve sıralı kısma yerleştirilir. [2, 16, 18, 22, 27, 6]

5. Adım: 6 sayısı alınır ve sıralı kısma yerleştirilir. [2, 6, 16, 18, 22, 27]

Sonuç: [2, 6, 16, 18, 22, 27]

### Big-O Gösterimi:

Insertion sort algoritmasının en kötü durum zaman karmaşıklığı \(O(n^2)\)'dir.

### Time Complexity:

18 sayısının arama durumları:

- **Average case**: Aradığımız sayının ortada olması. (Dizinin ortasında yer aldığı için 18 sayısı bu duruma girer.)
- **Worst case**: Aradığımız sayının sonda olması.
- **Best case**: Aradığımız sayının dizinin en başında olması.

### Selection Sort İlk 4 Adım:

Başlangıç: [7, 3, 5, 8, 2, 9, 4, 15, 6]

1. Adım: En küçük eleman 2, ilk elemanla yer değiştirilir. [2, 3, 5, 8, 7, 9, 4, 15, 6]

2. Adım: En küçük eleman 3, ikinci elemanla yer değiştirilir. [2, 3, 5, 8, 7, 9, 4, 15, 6]

3. Adım: En küçük eleman 4, üçüncü elemanla yer değiştirilir. [2, 3, 4, 8, 7, 9, 5, 15, 6]

4. Adım: En küçük eleman 5, dördüncü elemanla yer değiştirilir. [2, 3, 4, 5, 7, 9, 8, 15, 6]

Sonuç: [2, 3, 4, 5, 7, 9, 8, 15, 6]
